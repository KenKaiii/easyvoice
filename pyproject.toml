[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "easyvoice"
version = "1.0.0"
description = "Lightweight voice agent CLI created by Ken Kai - AI Developer"
authors = [{name = "Ken Kai", email = "kenkai@ai"}]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["voice", "ai", "cli", "agent", "speech"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    # Core CLI
    "rich>=13.0.0",
    "pyfiglet>=1.0.0",
    
    # HTTP Client for LLM
    "httpx>=0.25.0",
    "psutil>=5.9.0",
    
    # Data & Storage (sqlite3 and asyncio are built-in)
    "pydantic>=2.5.0",
]

[project.optional-dependencies]
audio = [
    # Audio Processing (optional for voice features)
    "sounddevice>=0.4.6",
    "soundfile>=0.12.0",
    "openai-whisper>=20231117",
    "torch>=2.1.0",
    "kittentts>=0.1.3",
]

dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-bdd>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.11.0",
    
    # Code Quality
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    
    # Development Tools
    "pre-commit>=3.3.0",
]

[project.scripts]
easyvoice = "easyvoice.__main__:cli_main"

[project.urls]
Homepage = "https://github.com/easyvoice/easyvoice"
Repository = "https://github.com/easyvoice/easyvoice"

# Tool Configuration
[tool.black]
line-length = 88
target-version = ["py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["easyvoice"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=easyvoice",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-fail-under=3",
    "--timeout=30",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "audio: marks tests that require audio hardware",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["easyvoice"]
omit = [
    "tests/*",
    "*/tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]